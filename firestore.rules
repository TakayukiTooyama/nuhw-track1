rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function getUser(userId) {
      return get(/database/$(database)/documents/users/$(userId))
    }

    function isAuth() {
      return request.auth != null;
    }

    function isUserAuth(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    // function isTeamAuth(teamId) {
    //   return request.resource.data.teamInfo.teamId == teamId;
    // }

    match /users/{userId} {
      allow read: if isAuth();
      allow create;
      allow update: if isUserAuth(userId);
      allow delete: if isUserAuth(userId);

      match /practices/{practiceId} {
        allow read: if isUserAuth(userId);
        allow create: if isUserAuth(userId);
        allow update: if isUserAuth(userId);
        allow delete: if isUserAuth(userId);
      }
      match /weights/{weightId} {
        allow read: if isAuth();
        allow create: if isUserAuth(userId);
        allow update: if isUserAuth(userId);
        allow delete: if isUserAuth(userId);
      }
      match /tournaments/{tournamentId} {
        allow read: if isAuth();
        allow create: if isUserAuth(userId);
        allow update: if isUserAuth(userId);
        allow delete: if isUserAuth(userId);
      }
    }

    match /teams/{teamId} {
      allow read: if isAuth();
      allow create: if isAuth();

      match /weightMenus/{weightMenuId} {
        allow read, write: if isAuth();
      }

      match /tournamentMenus/{tournamentMenuId} {
        allow read, write: if isAuth();
      }
    }
  }
}